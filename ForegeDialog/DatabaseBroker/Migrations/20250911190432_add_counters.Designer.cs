// <auto-generated />
using System;
using System.Collections.Generic;
using DatabaseBroker;
using Entity.Models.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DatabaseBroker.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250911190432_add_counters")]
    partial class add_counters
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.Blog.BlogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<List<long>>("Categories")
                        .HasColumnType("bigint[]")
                        .HasColumnName("categories");

                    b.Property<List<Guid>>("Images")
                        .HasColumnType("uuid[]")
                        .HasColumnName("images");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("published_date");

                    b.Property<long>("PublisherId")
                        .HasColumnType("bigint")
                        .HasColumnName("publisher_id");

                    b.Property<string>("ReadingTime")
                        .HasColumnType("text")
                        .HasColumnName("reading_time");

                    b.Property<MultiLanguageField>("Subject")
                        .HasColumnType("jsonb")
                        .HasColumnName("subject");

                    b.Property<List<long>>("Tags")
                        .HasColumnType("bigint[]")
                        .HasColumnName("tags");

                    b.Property<MultiLanguageField>("Text")
                        .HasColumnType("jsonb")
                        .HasColumnName("text");

                    b.Property<MultiLanguageField>("Title")
                        .HasColumnType("jsonb")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("blog_models");
                });

            modelBuilder.Entity("Entity.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSigned");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("Entity.Models.File.FileModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ContentType")
                        .HasColumnType("text")
                        .HasColumnName("content_type");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.HasKey("Id");

                    b.ToTable("file_model");
                });

            modelBuilder.Entity("Entity.Models.News.News", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<List<long>>("Categories")
                        .HasColumnType("bigint[]")
                        .HasColumnName("categories");

                    b.Property<List<Guid>>("Images")
                        .HasColumnType("uuid[]")
                        .HasColumnName("images");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("published_date");

                    b.Property<long>("PublisherId")
                        .HasColumnType("bigint")
                        .HasColumnName("publisher_id");

                    b.Property<string>("ReadingTime")
                        .HasColumnType("text")
                        .HasColumnName("reading_time");

                    b.Property<MultiLanguageField>("Subject")
                        .HasColumnType("jsonb")
                        .HasColumnName("subject");

                    b.Property<List<long>>("Tags")
                        .HasColumnType("bigint[]")
                        .HasColumnName("tags");

                    b.Property<MultiLanguageField>("Text")
                        .HasColumnType("jsonb")
                        .HasColumnName("text");

                    b.Property<MultiLanguageField>("Title")
                        .HasColumnType("jsonb")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("news");
                });

            modelBuilder.Entity("Entity.Models.News.Publisher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("image_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("publishers");
                });

            modelBuilder.Entity("Entity.Models.NewsCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("CategoryName")
                        .HasColumnType("jsonb")
                        .HasColumnName("category_name");

                    b.HasKey("Id");

                    b.ToTable("news_category");
                });

            modelBuilder.Entity("Entity.Models.OurCategories", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.Property<Guid>("PicturesId")
                        .HasColumnType("uuid")
                        .HasColumnName("pictures_id");

                    b.HasKey("Id");

                    b.HasIndex("PicturesId");

                    b.ToTable("our_categories");
                });

            modelBuilder.Entity("Entity.Models.OurPartners", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("About")
                        .HasColumnType("jsonb")
                        .HasColumnName("about");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<MultiLanguageField>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.Property<Guid>("PicturesId")
                        .HasColumnType("uuid")
                        .HasColumnName("pictures_id");

                    b.HasKey("Id");

                    b.ToTable("our_partners");
                });

            modelBuilder.Entity("Entity.Models.OurResources", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("description");

                    b.Property<string>("FilePath")
                        .HasColumnType("text")
                        .HasColumnName("file_path");

                    b.Property<MultiLanguageField>("Title")
                        .HasColumnType("jsonb")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("our_resources");
                });

            modelBuilder.Entity("Entity.Models.OurService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("description");

                    b.Property<Guid>("PicturesId")
                        .HasColumnType("uuid")
                        .HasColumnName("pictures_id");

                    b.Property<MultiLanguageField>("Title")
                        .HasColumnType("jsonb")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("OurServices");
                });

            modelBuilder.Entity("Entity.Models.OurTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("About")
                        .HasColumnType("jsonb")
                        .HasColumnName("about");

                    b.Property<MultiLanguageField>("Experience")
                        .HasColumnType("jsonb")
                        .HasColumnName("experience");

                    b.Property<MultiLanguageField>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.Property<Guid>("PicturesId")
                        .HasColumnType("uuid")
                        .HasColumnName("pictures_id");

                    b.Property<MultiLanguageField>("Role")
                        .HasColumnType("jsonb")
                        .HasColumnName("role");

                    b.Property<List<MultiLanguageField>>("Skills")
                        .HasColumnType("jsonb")
                        .HasColumnName("skills");

                    b.HasKey("Id");

                    b.HasIndex("PicturesId");

                    b.ToTable("our_teams");
                });

            modelBuilder.Entity("Entity.Models.OurValuedClients", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("CompanyName")
                        .HasColumnType("jsonb")
                        .HasColumnName("company_name");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text")
                        .HasColumnName("image_path");

                    b.Property<string>("link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.HasKey("Id");

                    b.ToTable("our_valued_clients");
                });

            modelBuilder.Entity("Entity.Models.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid")
                        .HasColumnName("file_id");

                    b.Property<MultiLanguageField>("FileName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("file_name");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("published_date");

                    b.Property<string>("Size")
                        .HasColumnType("text")
                        .HasColumnName("size");

                    b.Property<MultiLanguageField>("Subject")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("subject");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("resource");
                });

            modelBuilder.Entity("Entity.Models.ResourceCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("CategoryName")
                        .HasColumnType("jsonb")
                        .HasColumnName("category_name");

                    b.HasKey("Id");

                    b.ToTable("resourceCategory");
                });

            modelBuilder.Entity("Entity.Models.Statistics", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("HappyClients")
                        .HasColumnType("jsonb")
                        .HasColumnName("happy_clients");

                    b.Property<int>("Projects")
                        .HasColumnType("jsonb")
                        .HasColumnName("projects");

                    b.Property<int>("TeamMembers")
                        .HasColumnType("jsonb")
                        .HasColumnName("team_members");

                    b.Property<int>("YearsExperience")
                        .HasColumnType("jsonb")
                        .HasColumnName("years_experience");

                    b.HasKey("Id");

                    b.ToTable("statistics");
                });

            modelBuilder.Entity("Entity.Models.Tags", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("TagName")
                        .HasColumnType("jsonb")
                        .HasColumnName("category_name");

                    b.HasKey("Id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("Entity.Models.Translation.Translation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("En")
                        .HasColumnType("text")
                        .HasColumnName("en")
                        .HasAnnotation("Relational:JsonPropertyName", "en");

                    b.Property<string>("Ger")
                        .HasColumnType("text")
                        .HasColumnName("ger")
                        .HasAnnotation("Relational:JsonPropertyName", "ger");

                    b.Property<string>("Ru")
                        .HasColumnType("text")
                        .HasColumnName("ru")
                        .HasAnnotation("Relational:JsonPropertyName", "ru");

                    b.Property<string>("Uz")
                        .HasColumnType("text")
                        .HasColumnName("uz")
                        .HasAnnotation("Relational:JsonPropertyName", "uz");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("translations");
                });

            modelBuilder.Entity("Entity.Models.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSigned");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Entity.Models.Views", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint")
                        .HasColumnName("item_id");

                    b.HasKey("Id");

                    b.ToTable("views");
                });

            modelBuilder.Entity("Entity.Models.Blog.BlogModel", b =>
                {
                    b.HasOne("Entity.Models.News.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Entity.Models.News.News", b =>
                {
                    b.HasOne("Entity.Models.News.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Entity.Models.OurCategories", b =>
                {
                    b.HasOne("Entity.Models.File.FileModel", "Pictures")
                        .WithMany()
                        .HasForeignKey("PicturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Entity.Models.OurTeam", b =>
                {
                    b.HasOne("Entity.Models.File.FileModel", "Pictures")
                        .WithMany()
                        .HasForeignKey("PicturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Entity.Models.Resource", b =>
                {
                    b.HasOne("Entity.Models.File.FileModel", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });
#pragma warning restore 612, 618
        }
    }
}
